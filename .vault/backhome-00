#!/bin/bash
# Backup home directory

## Variables

# Source Directory (should be root (/) as include/exclude files use full paths)
src_dir="/"

# Destination Directory
dsp_dir="/mnt/Backup"   # Destination Parent Directory
comp="${HOSTNAME}"; os="linux"; type="home"; date="$(date +%F)"
dst_dir="$dsp_dir"/"$comp"_"$os"-"$type"_"$date"

# Include, exclude, and note file locations
incl_file="${0}"-inc.txt
excl_file="${0}"-exc.txt

# Editor
editor=vim

## Functions

# Source, Destination Parent Directories existence check
srd_dir_chk () {
for d in "$src_dir" "$dsp_dir"; do
  if [ ! -d "$d" ]; then
    echo " Directory "$d" doesn't exist." && exit
  else
    echo " Directory "$d" exists."
  fi
done
}

# Destination Directory existence check and creation
dst_dir_crt () {
if [ ! -d "$dst_dir" ]; then
  mkdir "$dst_dir"
  echo " Created destination directory "$dst_dir""
else
  echo " Destination directory "$comp"_"$date"_"$type" already exists."
fi
}

help () {
echo " ${0##*/} <i|e||ie|ee|x> - backup home directory
  i  - add to the include list a file or folder
  e  - add to the exclude list a file or folder or regexp pattern
  ie - edit include file
  ee - edit exclude file
  x  - execute backup"
}

case $1 in
  i ) # Add to include list file or folder
      shift
      for f in "$@"; do
        # Check if selection(s) exist
        if [ ! -e "$f" ]; then
          echo " File \""$f"\" does not exist."
          continue
        fi
        # Append file/folder to include list
        full_path=$(readlink -f "$f")
        # `readlink -f` chomps trailing slash, if exists append
        [[ $(echo "$f" | rev | cut -b1) = / ]] && \
        full_path="$full_path/"
        echo "$full_path" >> "$incl_file" && \
        echo " Added \""$f"\" to ${incl_file##*/} include file."
      done
      # Sort entries, erase duplicates
      sort -u "$incl_file" -o "$incl_file" ;;
  e ) # Add to exclude list file or folder
      shift
      for f in "$@"; do
        # Check if selection(s) exist
        if [ ! -e "$f" ]; then
          echo " File \""$f"\" does not exist."
          continue
        fi
        # Append file/folder to include list
        full_path=$(readlink -f "$f")
        # `readlink -f` chomps trailing slash, if exists append
        [[ $(echo "$f" | rev | cut -b1) = / ]] && \
        full_path="$full_path/"
        echo "$full_path" >> "$excl_file" && \
        echo " Added \""$f"\" to ${excl_file##*/} exclude file."
      done
      # Sort entries, erase duplicates
      sort -u "$excl_file" -o "$excl_file" ;;
  ie) # Edit include file
       $editor "$incl_file" ;;
  ee) # Edit exclude file
       $editor "$excl_file" ;;
  x ) # Execute backup
      srd_dir_chk
      dst_dir_crt
      rsync -axSv --delete-excluded --files-from="$incl_file" --exclude-from="$excl_file" "$src_dir" "$dst_dir" ;;
  * ) # Display usage if no parameters give
      help ;;
esac
