#!/bin/bash
# Restore system configurations

comp="${HOSTNAME}" osys="linux"        	           # destination dir name values
type="sysc" date=""                                # date blank for discovery

srp_dir="/mnt/Backup/rsync/"                       # source parent   dir
srb_dir="$comp"_"$osys"-"$type"_"$date"            # source basename dir
dst_dir="/"                                        # destination dir

incl_file="${0}"-inc.txt                           # include file name/location
excl_file="${0}"-exc.txt                           # exclude file name/location

editor=vim                                         # text editor

# Program(s) required
progs_req=(rsync vim)
for p in ${progs_req[@]}; do hash "$p" 2>&- || \
  { echo >&2 " Program required: "$p""; exit 1; }
done

# Check if root
root_chk () {
if [ $(whoami) != root ]; then
  hash sudo 2>&- || { echo >&2 " Program required: sudo"; exit 1; }
  sudo=sudo
fi
}

# Test if source-parent and destination directories exist
spd_dir_chk () {
if [ -d "$srp_dir" ]; then echo " Srcpar dir exists: "$srp_dir""
else                       echo " Srcpar dir non-exist: "$srp_dir"" && exit; fi
if [ -d "$dst_dir" ]; then echo " Dstntn dir exists: "$dsp_dir""
else                       echo " Dstntn dir non-exist: "$dst_dir"" && exit; fi
}

# Select source Directory
slc_src_dir () {
printf "Select directory containing backup:\n"
select src_dir in "$srp_dir""$srb_dir"*/
  do
    test -n "$src_dir" && break
    echo " Select 1, 2, ..."
  done
}

# Check if files exists in include file in source directory
src_inc_chk() {
[ ! -f "$incl_file" ] && { echo " No include file, exiting." && exit; }
while read iname; do
  [ -e "$src_dir""$iname" ] || echo " Include non-exist: "$iname""
done < "$incl_file"
}

# Check if files exists in exclude file in source directory
src_exc_chk() {
[ ! -f "$excl_file" ] && { echo " No exclude file, exiting." && exit; }
while read ename; do
  [ -e "$src_dir""$ename" ] || echo " Exclude non-exist: "$ename""
done < "$excl_file"
}

# Restore (prompt before)
restore () {
while true; do
  read -p " Execute restore (y/n): " yn
  case $yn in
    [Yy]* ) $sudo rsync -axSvRr --files-from="$incl_file" \
            --exclude-from="$excl_file" "$src_dir" "$dst_dir"
            break ;;
    [Nn]* ) break ;;
    *     ) echo "  Answer 'y' for yes, 'n' for no."
  esac
done
}

# Diff files
diff_file () {
for iname in $(cat "$incl_file"); do
  if   [ -f "$src_dir""$iname" -a -f "$iname" ] ; then
    if [[ $(diff "$src_dir""$iname" "$iname") ]]; then
      $sudo vimdiff "$src_dir""$iname" "$iname"
    else
      echo " diff match - file: "$iname""
    fi
  elif [ ! -f "$iname" ]; then
    echo " destdir non-exist: "$iname""
    $sudo vimdiff "$src_dir""$iname" "$iname"
  fi
  wait
done
}

scrpt_help () {
echo " ${0##*/} <i|e||ie|ee|x> - restore system configurations
  i - include a file/folder/link (add to the include list)
  e - exclude a file/folder/link (add to the exclude list)
  I - include list edit
  E - exclude list edit
  x - execute restore
  d - diff configurations"
}

case $1 in
  i ) # Add to include list
      shift
      for f in "$@"; do
        [ ! -e "$f" ] && echo "File non-exist: "$f"" && continue # Check exist.
        full_path=$(realpath -s "$f")
        [ -d "$f" ] && full_path="$full_path/"          # Trailing slash req dir
        echo "$full_path" >> "$incl_file"
        echo " Added to inc-file: "$f""
      done
      sort -u "$incl_file" -o "$incl_file" ;;           # Sort, erase duplicates
  e ) # Add to exclude list
      shift
      for f in "$@"; do
        [ ! -e "$f" ] && echo "File non-exist: "$f"" && continue # Check exist.
        full_path=$(realpath -s "$f")
        [ -d "$f" ] && full_path="$full_path/"          # Trailing slash req dir
        echo "$full_path" >> "$excl_file"
        echo " Added to inc-file: "$f""
      done
      sort -u "$excl_file" -o "$excl_file" ;;           # Sort, erase duplicates
  I ) # Edit include file
       $editor "$incl_file" ;;
  E ) # Edit exclude file
       $editor "$excl_file" ;;
  x ) # Execute restore
      root_chk
      spd_dir_chk
      slc_src_dir
      src_inc_chk
      src_exc_chk
      restore ;;
  d ) root_chk
      spd_dir_chk
      slc_src_dir
      src_inc_chk
      diff_file ;;
  * ) # Display usage if no parameters give
      scrpt_help ;;
esac
